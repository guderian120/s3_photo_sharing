#!/bin/bash

# AWS Cognito Setup Script for Photo Sharing App
# Usage: ./setup_cognito.sh [profile-name]

set -e

# Configure AWS profile (default to 'sandbox' if not provided)
AWS_PROFILE=${1:-sandbox}
echo "Using AWS profile: $AWS_PROFILE"

# Generate a unique domain prefix
DOMAIN_PREFIX="photoshare-$(date +%s | sha256sum | base64 | head -c 8 | tr '[:upper:]' '[:lower:]')"
REGION="eu-west-1"  # Change this to your preferred region

echo "Starting Cognito setup in region: $REGION"

# Step 1: Create User Pool
echo "Creating Cognito User Pool..."
USER_POOL_ID=$(aws cognito-idp create-user-pool \
  --pool-name PhotoSharingUserPool \
  --auto-verified-attributes email \
  --policies '{
      "PasswordPolicy": {
          "MinimumLength": 8,
          "RequireUppercase": true,
          "RequireLowercase": true,
          "RequireNumbers": true,
          "RequireSymbols": true,
          "TemporaryPasswordValidityDays": 7
      }
  }' \
  --schema '[{
      "Name": "email",
      "AttributeDataType": "String",
      "Required": true,
      "Mutable": true
  }]' \
  --admin-create-user-config '{
      "AllowAdminCreateUserOnly": false
  }' \
  --email-configuration '{
      "EmailSendingAccount": "COGNITO_DEFAULT"
  }' \
  --region $REGION \
  --profile $AWS_PROFILE \
  --query 'UserPool.Id' \
  --output text)

echo "Created User Pool with ID: $USER_POOL_ID"

# Step 2: Create App Client
echo "Creating App Client..."
CLIENT_ID=$(aws cognito-idp create-user-pool-client \
  --user-pool-id $USER_POOL_ID \
  --client-name PhotoSharingAppClient \
  --no-generate-secret \
  --explicit-auth-flows "ALLOW_USER_PASSWORD_AUTH" "ALLOW_REFRESH_TOKEN_AUTH" \
  --supported-identity-providers "COGNITO" \
  --callback-urls "http://localhost:8080" "http://localhost:3000" \
  --logout-urls "http://localhost:8080" "http://localhost:3000" \
  --allowed-o-auth-flows-user-pool-client \
  --allowed-o-auth-flows "implicit" \
  --allowed-o-auth-scopes "email" "openid" "profile" \
  --refresh-token-validity 30 \
  --region $REGION \
  --profile $AWS_PROFILE \
  --query 'UserPoolClient.ClientId' \
  --output text)

echo "Created App Client with ID: $CLIENT_ID"

# Step 3: Create Domain
echo "Setting up Cognito Domain..."
aws cognito-idp create-user-pool-domain \
  --user-pool-id $USER_POOL_ID \
  --domain $DOMAIN_PREFIX \
  --region $REGION \
  --profile $AWS_PROFILE

echo "Created Cognito Domain: $DOMAIN_PREFIX.auth.$REGION.amazoncognito.com"

# Step 4: Generate configuration file
CONFIG_FILE="cognito_config.js"
cat > $CONFIG_FILE <<EOL
// Cognito Configuration - Generated by setup script
const cognitoConfig = {
    UserPoolId: '$USER_POOL_ID',
    ClientId: '$CLIENT_ID',
    Region: '$REGION',
    Domain: '$DOMAIN_PREFIX.auth.$REGION.amazoncognito.com'
};

// Copy these values to your app configuration
console.log('AWS Cognito Configuration:');
console.log('UserPoolId:', cognitoConfig.UserPoolId);
console.log('ClientId:', cognitoConfig.ClientId);
console.log('Region:', cognitoConfig.Region);
console.log('Domain:', cognitoConfig.Domain);

// For your HTML file, use this configuration:
/*
const cognitoConfig = {
    UserPoolId: '$USER_POOL_ID',
    ClientId: '$CLIENT_ID',
    Region: '$REGION'
};
*/
EOL

echo "Configuration saved to $CONFIG_FILE"

# Step 5: Create test user (optional)
read -p "Would you like to create a test user? (y/n) " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]
then
    read -p "Enter test user email: " TEST_EMAIL
    read -p "Enter test user password (min 8 chars with uppercase, number, symbol): " -s TEST_PASSWORD
    echo
    
    echo "Creating test user..."
    aws cognito-idp sign-up \
      --client-id $CLIENT_ID \
      --username $TEST_EMAIL \
      --password $TEST_PASSWORD \
      --user-attributes Name=email,Value=$TEST_EMAIL \
      --region $REGION \
      --profile $AWS_PROFILE
    
    echo "Confirming test user..."
    aws cognito-idp admin-confirm-sign-up \
      --user-pool-id $USER_POOL_ID \
      --username $TEST_EMAIL \
      --region $REGION \
      --profile $AWS_PROFILE
    
    echo "Test user created: $TEST_EMAIL"
fi

echo "Cognito setup complete!"
echo "User Pool ID: $USER_POOL_ID"
echo "App Client ID: $CLIENT_ID"
echo "Region: $REGION"
echo "Login URL: https://$DOMAIN_PREFIX.auth.$REGION.amazoncognito.com/login?client_id=$CLIENT_ID&response_type=token&scope=email+openid+profile&redirect_uri=http://localhost:8080"